import {
  GameModule,
  GameResolvers,
  GameSchema,
  SubscriberModule,
  SubscriberResolvers,
  SubscriberSchema,
  StreamModule,
  StreamResolvers,
  StreamSchema,
  UserModule,
  UserResolvers,
  UserSchema,
  QueryModule,
  QueryResolvers,
  QuerySchema,
  UserSubscriberLinkModule,
  UserSubscriberLinkResolvers,
  UserSubscriberLinkSchema,
  GameStreamLinkModule,
  GameStreamLinkResolvers,
  GameStreamLinkSchema,
  StreamUserLinkModule,
  StreamUserLinkResolvers,
  StreamUserLinkSchema,
  RedemptionPubSubModule,
  RedemptionPubSubResolvers,
  RedemptionPubSubSchema,
  RedemptionUserLinkModule,
  RedemptionUserLinkResolvers,
  RedemptionUserLinkSchema,
  ChatPubSubModule,
  ChatPubSubResolvers,
  ChatPubSubSchema,
  ChatUserLinkModule,
  ChatUserLinkResolvers,
  ChatUserLinkSchema,
  BitPubSubModule,
  BitPubSubResolvers,
  BitPubSubSchema,
  BitUserLinkModule,
  BitUserLinkResolvers,
  BitUserLinkSchema,
  SubscriptionPubSubModule,
  SubscriptionPubSubResolvers,
  SubscriptionPubSubSchema,
  SubscriptionPubSubUserLinkModule,
  SubscriptionPubSubUserLinkResolvers,
  SubscriptionPubSubUserLinkSchema,
  SubscriptionPubSubChatLinkModule,
  SubscriptionPubSubChatLinkSchema,
  FollowPubSubUserLinkModule,
  FollowPubSubUserLinkResolvers,
  FollowPubSubUserLinkSchema,
  FollowPubSubModule,
  FollowPubSubResolvers,
  FollowPubSubSchema,
  onConnect,
  context,
} from './index'

describe('npm package', () => {
  it('everything should exist', () => {
    expect(GameModule).toBeTruthy()
    expect(GameResolvers).toBeTruthy()
    expect(GameSchema).toBeTruthy()
    expect(SubscriberModule).toBeTruthy()
    expect(SubscriberResolvers).toBeTruthy()
    expect(SubscriberSchema).toBeTruthy()
    expect(StreamModule).toBeTruthy()
    expect(StreamResolvers).toBeTruthy()
    expect(StreamSchema).toBeTruthy()
    expect(UserModule).toBeTruthy()
    expect(UserResolvers).toBeTruthy()
    expect(UserSchema).toBeTruthy()
    expect(QueryModule).toBeTruthy()
    expect(QueryResolvers).toBeTruthy()
    expect(QuerySchema).toBeTruthy()
    expect(UserSubscriberLinkModule).toBeTruthy()
    expect(UserSubscriberLinkResolvers).toBeTruthy()
    expect(UserSubscriberLinkSchema).toBeTruthy()
    expect(GameStreamLinkModule).toBeTruthy()
    expect(GameStreamLinkResolvers).toBeTruthy()
    expect(GameStreamLinkSchema).toBeTruthy()
    expect(StreamUserLinkModule).toBeTruthy()
    expect(StreamUserLinkResolvers).toBeTruthy()
    expect(StreamUserLinkSchema).toBeTruthy()
    expect(RedemptionUserLinkModule).toBeTruthy()
    expect(RedemptionUserLinkResolvers).toBeTruthy()
    expect(RedemptionUserLinkSchema).toBeTruthy()
    expect(RedemptionPubSubModule).toBeTruthy()
    expect(RedemptionPubSubResolvers).toBeTruthy()
    expect(RedemptionPubSubSchema).toBeTruthy()
    expect(ChatPubSubModule).toBeTruthy()
    expect(ChatPubSubResolvers).toBeTruthy()
    expect(ChatPubSubSchema).toBeTruthy()
    expect(ChatUserLinkModule).toBeTruthy()
    expect(ChatUserLinkResolvers).toBeTruthy()
    expect(ChatUserLinkSchema).toBeTruthy()
    expect(BitPubSubModule).toBeTruthy()
    expect(BitPubSubResolvers).toBeTruthy()
    expect(BitPubSubSchema).toBeTruthy()
    expect(BitUserLinkModule).toBeTruthy()
    expect(BitUserLinkResolvers).toBeTruthy()
    expect(BitUserLinkSchema).toBeTruthy()
    expect(SubscriptionPubSubModule).toBeTruthy()
    expect(SubscriptionPubSubResolvers).toBeTruthy()
    expect(SubscriptionPubSubSchema).toBeTruthy()
    expect(SubscriptionPubSubUserLinkModule).toBeTruthy()
    expect(SubscriptionPubSubUserLinkResolvers).toBeTruthy()
    expect(SubscriptionPubSubUserLinkSchema).toBeTruthy()
    expect(SubscriptionPubSubChatLinkModule).toBeTruthy()
    expect(SubscriptionPubSubChatLinkSchema).toBeTruthy()
    expect(onConnect).toBeTruthy()
    expect(context).toBeTruthy()
    expect(FollowPubSubUserLinkModule).toBeTruthy()
    expect(FollowPubSubUserLinkResolvers).toBeTruthy()
    expect(FollowPubSubUserLinkSchema).toBeTruthy()
    expect(FollowPubSubModule).toBeTruthy()
    expect(FollowPubSubResolvers).toBeTruthy()
    expect(FollowPubSubSchema).toBeTruthy()
  })
})
